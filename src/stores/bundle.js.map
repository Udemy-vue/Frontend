{"version":3,"names":[],"mappings":"","sources":["bundle.js"],"sourcesContent":["import axios from 'axios';\nimport { defineStore } from \"pinia\";\nimport { api, nano, links } from \"boot/axios\";\n// import { auth, db, storage } from \"../../firebaseConfig\";\n// import { createUserWithEmailAndPassword,\n// \t\tsignInWithEmailAndPassword,\n// \t\tonAuthStateChanged,\n// \t\tsignOut, updateProfile} from \"firebase/auth\";\n// import { collection, query, where, getDoc,\n// \t\tgetDocs, addDoc, deleteDoc, doc,\n// \t\tupdateDoc, setDoc } from 'firebase/firestore';\n// import { getDownloadURL, uploadBytes, ref } from 'firebase/storage'\n// import router from '../router';\n// import { nanoid } from 'nanoid';\n// import { errorAutentication } from \"../../src/Constans\";\n// import { message } from \"ant-design-vue\";\n\nexport const ButtonUser = defineStore('button', {\n  state: () => ({\n    button: 'Registrar',\n    counter: 0,\n    token: '',\n    expiresIn: 0,\n    longLink: ''\n  }),\n  actions: {\n    async access() {\n      try {\n        const res = await api.post('login', {\n          \"email\": \" penelope@test.com \",\n          \"password\": \"123123\"\n        });\n        this.token = res.data.token;\n        this.expiresIn = res.data.expiresIn;\n        this.setTime();\n      } catch (e) {\n        console.log(e);\n      }\n    },\n\n    async refreshToken() {\n      try {\n        const res = await api.get('refresh');\n        this.token = res.data.token;\n        this.expiresIn = res.data.expiresIn;\n        this.setTime();\n      } catch (e) {\n        console.log(e);\n      }\n    },\n\n    setTime() {\n      setTimeout(() => {\n        this.refreshToken();\n      }, this.expiresIn * 1000 - 6000)\n    },\n\n    async createLink() {\n      // console.log(this.longLink)\n      try {\n        const res = await links({\n          method: \"POST\",\n          url: \"ok\",\n          headers: {\n            Authorization: \"Bearer \" + this.token,\n          },\n          data: {\n            longLink: this.longLink\n          }\n        });\n        console.log(res.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n});\n"],"file":"bundle.js"}